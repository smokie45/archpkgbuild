# PKGBUILD for librespot, based on AUR PKBGUILD
#
# This PKGBUILD allows crosscompilation on x86 for aarch64 !
# Use: makepkg --config aarch64.makepkg.conf -fsr
#
# TODO: 
#   - x86 build fails with "symbol `ring_core_0_17_8_OPENSSL_ia32cap_P' isn't defined"
#   - optimize dependend lib handling for xcompile (use a wrapper?)
#   - make cargo install work
pkgname=librespot
_pkgname=librespot
pkgver=0.6.0
pkgrel=3
#epoch=1
pkgdesc="Open Source Spotify client library"
# arch=('x86_64' 'aarch64')
arch=('aarch64')
url="https://github.com/librespot-org/librespot"
license=('MIT')
depends=('libvorbis' 'alsa-lib')
makedepends=('git' 'rust')
provides=('librespot')
conflicts=('librespot')
#source=('git+https://github.com/librespot-org/librespot')
# source=('git+https://github.com/librespot-org/librespot#tag=v0.6.0')
source=('git+https://github.com/librespot-org/librespot#branch=dev')
sha256sums=('SKIP')

_TARGET="$CARCH-unknown-linux-gnu"
# for xcompile. 
export ARCH=aarch64
export CROSS_COMPILE=aarch64-linux-gnu-
# somehoe a makepkg --config=aarch64.makepkg.conf ... does use the nativ strip instead of the CROSS_COMPILE"-strip",
# resulting in files having "Machine=no" in ELF. As workaround simply avoid stripping here.
options=('!strip')
#pkgver() {
#    cd "$_pkgname"
    #echo $(git rev-list --count HEAD).$(git rev-parse --short HEAD)
    #echo $(git describe --abbrev=0)
#}
prepare() {
    _HOSTARCH=$(uname -m)
    [[ ${CARCH} != ${_HOSTARCH} ]] && _XCOMPILE=1
    if [[ ${_XCOMPILE} ]]; then
        echo -e "    ${YELLOW}We'll do crosscompiling for ${CARCH} on ${_HOSTARCH}${ALL_OFF}"
        _SYSROOT=${srcdir}/SYSROOT
        mkdir -p ${_SYSROOT}
        export PKG_CONFIG_SYSROOT_DIR=${_SYSROOT}
        echo "    using _SYSROOT=${_SYSROOT}"
        if [ ! -f ${_SYSROOT}/alsa-lib-1.2.14-1-aarch64.pkg.tar.xz ]; then
            echo "    ${YELLOW}Downloading alsa-lib-1.2.14-1-aarch64.pkg.tar.xz${ALL_OFF}"
            wget -P ${_SYSROOT} http://mirror.archlinuxarm.org/aarch64/extra/alsa-lib-1.2.14-1-aarch64.pkg.tar.xz
            cd ${_SYSROOT}
            tar xJf alsa-lib-1.2.14-1-aarch64.pkg.tar.xz
        fi
        # TODO: this is fixed for aarch64 only
        #
        if [[ ! $( rustup target list | grep "${_TARGET} (installed)") ]]; then
            echo -e "    ${RED}Error, rustup has no target: ${_TARGET} installed${ALL_OFF}"
            echo -e "    You may want to invoke 'rustup target add ${_TARGET}'"
            exit
        fi
        export CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=/usr/bin/aarch64-linux-gnu-gcc
        if [ ! -f ${CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER} ]; then
            echo -e "    ${RED}No xcompiler found at ${CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER}${ALL_OFF}"
            echo -e "    Maybe you need: 'pacman -S aarch64-linux-gnu-gcc' ?"
            exit
        fi
    fi
}

build() {
    cd "$_pkgname"

    echo -e "    ${YELLOW}Building for ${_TARGET}${ALL_OFF}"
    #echo -e "    ${YELLOW}Building for ${CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER}"
    cargo build \
        --release \
	    --no-default-features \
	    --features "alsa-backend with-libmdns" \
	    --features "rustls-tls-native-roots" \
	    --target ${_TARGET} 
	#    -vv
#        --frozen \
}

package() {
    cd "$_pkgname"
    # TODO: makepkg will call strip instead of aadrch64-linux-gnu-strip, which causes to have "no machine" in ELF header of stripped binary
    #       we can avoid strip in aarch64.makepkg.conf
    echo -e "    ${YELLOW}Installing for ${_TARGET}${ALL_OFF}"
    echo -e "    ${YELLOW}CROSS_COMPILE=${CROSS_COMPILE}${ALL_OFF}"
#    cargo install \
#        --locked \
#        --no-track \
#        --path . \           
#        --root "$pkgdir/usr" \
#	    --target ${_TARGET}
#	# TODO cargo install looks into ./target/release instead of ./target/aarch64-...

	install -D -m 755 target/${_TARGET}/release/librespot \
        ${pkgdir}/usr/bin/librespot
    install -D -m 644 contrib/librespot.service \
        ${pkgdir}/usr/lib/systemd/system/librespot.service
    install -D -m 644 contrib/librespot.user.service \
        ${pkgdir}/usr/lib/systemd/user/librespot.service
    install -D -m 644 LICENSE \
        ${pkgdir}/usr/share/licenses/${_pkgname}/LICENSE
}
